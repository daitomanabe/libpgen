# はじめに


# 概要


# インストール方法


# libpgenを使用した簡単なプログラミング
libpgenを使って簡単なプログラムを書いていきましょう。実際にlibpgenを使って開発などを行う前にパケットキャプチャ、
ping
コマンドの作成はすることをお勧めします。
現在はパケットキャプチャとpingコマンドのみですが、今後もサンプルの追加をしていく予定です。

[パケットキャプチャ] 
インストールは完了したので、libpgen初めてのプログラミングとして、簡単なパケットキャプチャを作成してみましょう。
このプログラムはとてもシンプルで数行でコーディングできる規模でありながらlibpgenのパケット受信機能のほとんどを
理解することができます。

[pingコマンド]
パケットキャプチャの作成ではlibpgenを使って簡単にパケットの受信、解析を行うことができました。
では最後にネットワーク関連のプログラムの誰もが一度は使うpingコマンドをlibpgenを使って作ってみましょう。
ここではlibpgenのパケット作成、送受信、解析を体験するだけなのでpingコマンドはシンプルに実装します。
ただICMP Echo Requestパケットを送信して、ICMP Echo Replyパケットを受信待機して受信したら表示するだけです。

ここでは特殊的なlibpgenの使い方を説明しました。
次項では一般的なlibpgenの使用方法について説明していきます。




# libpgenでのプログラミングの流れ
libpgenで行うタスクはパケットの作成、編集、送受信、解析です。ここではそれらの方法の基本的作業を説明していきます。

パケットの受信
パケットをpcapファイルから読み取る
パケットの作成,編集,解析
パケットの送信
パケットをpcapファイルに書き込む

## パケット受信
指定したネットワークインターフェースからパケットをバイナリ形式で
受信します。受信したパケットは簡単なインターフェースで編集したり、
送信、pcapに書き込みなどを行えます。
## パケットをpcapファイルから読み込み
wiresharkなどでキャプチャしたpcap形式のファイルを読み込みます。
読み込んだパケットは送信したり、編集して新たにpcap形式のファイルに
書き込むことができます。
## パケット作成,編集,解析
既存のパケットのバイナリを解析し、簡単なインターフェースで
パケットを編集します。
パケットのバイナリを解析して、プロトコルの要素ごとに簡単に解析できます。
対応プロトコルクラスへのリンクを貼ることを忘れずに
## パケット送信
作成したパケットのバイナリを指定したネットワークインターフェースから
送信します。
## パケットをpcapファイルに書き込み
生成したパケットのバイナリをpcapファイルに書き込みます。
書き込んだpcapファイルはwiresharkなどで開いたり、解析をすることが
できます。






# libpgenの機能紹介
libpgenはアドレスクラス、パケットクラス、netutilで構成されています。
以下ではそれらについて説明していきます。

## アドレスクラス
libpgenではIPアドレス、MACアドレスを扱いやすくするためにアドレスを管理するクラスを含んでいます。
以下ではIPアドレスクラス、MACアドレスクラスについて説明していきます。
## パケットクラス
libpgenはサポートするプロトコルごとにパケットクラスが用意されています。
ここでは、各プロトコルのパケットクラスごとに、詳しく説明していきます。
各クラスごとにリンクを貼って、別のページへ飛ぶ（その方がプロトコル追加後にドキュメントが書きやすい）
pgen_unknownクラス
pgen_packetクラス
pgen_ethクラス
pgen_ethクラス
pgen_arpクラス
pgen_ipクラス
pgen_icmpクラス
pgen_tcpクラス
pgen_udpクラス
pgen_dnsクラス
pgen_dhcpクラス
pgen_ardroneクラス
## netutil
libpgenでは、ネットワークインターフェースに関わる作業を完全に独立させています。
以下ではnetutilが持っている機能を紹介します。



# libpgenを拡張する。

## プロトコル拡張の方法
ここではlibpgenを新たなプロトコルに対応させる方法を説明します。
行う作業は以下の0個です。

1. ごちゃごちゃ
2. ごちゃごちゃ
3. ごちゃごちゃ
4. ごちゃごちゃ
5. ごちゃごちゃ



